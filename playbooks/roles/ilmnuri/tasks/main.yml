---
- name: Ensure needed packages are installed
  yum:
    name: "{{ item }}" 
    state: latest
  with_items:
    - nginx
    - supervisor
    - memcached
    - gcc
    - git
    - python-pip
    - python-devel

- name: Remove apache if exists
  yum:
    name: httpd
    state: absent

- name: Upgrade pip
  shell: pip install --upgrade pip    

- name: Copy requirements file
  copy:
    src: requirements.txt
    dest: /tmp/requirements.txt
    mode: 0744

- name: Install all the python packages
  shell: pip install -r /tmp/requirements.txt    

- name: Nginx conf
  copy:
    src: ilmnuri.conf
    dest: /etc/nginx/nginx.conf
    mode: 0644
  notify:
  - restart nginx

- name: Pull the app from git
  git: 
    repo: "{{ webapp }}"
    dest: /usr/share/nginx/html/app
    force: yes
  notify:
  - restart supervisor

- name: Copy setup files of uwsgi
  copy:
    src: "{{ item }}"
    dest: /usr/share/nginx/html/{{ item }}
    mode: 0755
  with_items:
    - ilmnuri.ini
    - ilmnuri.py
  notify:
    - restart supervisor

- name: Copy scripts into root dir
  copy:
    src: "{{ item }}"
    dest: /usr/share/nginx/html/{{ item }}
    mode: 0755
  with_items:
    - stats.py
    - get_full_list.py
    - get_flags.py
    - db_backup.sh
    - awssync.sh

- name: Create backup directory
  file:
    path: /root/{{ item }}
    mode: 0755
    state: directory
  with_items:
    - backups
    - .aws

#- name: Copy aws config files
#  copy:
#    src: "{{ item }}"
#    dest: /root/.aws/{{ item }}
#    mode: 0600
#  with_items:
#    - config
#    - credentials

#- name: Adding key id
#  lineinfile: 
#    dest: /root/.aws/credentials 
#    regexp: ^aws_access_key_id
#    line: aws_access_key_id = {{ aws_access_key_id }}

#- name: Adding key
#  lineinfile: 
#    dest: /root/.aws/credentials 
#    regexp: ^aws_secret_access_key
#    line: aws_secret_access_key = {{ aws_access_key_id }}

- name: Setup cron for daily s3 sync
  cron:
    name: "Sync new audio from S3 aws"
    hour: 1
    minute: 0
    weekday: 4,5
    user: root
    job: '/usr/share/nginx/html/awssync.sh > /dev/null 2>&1'

- name: Setup cron for daily stats count
  cron:
    name: Daily stats counter
    hour: 4
    minute: 0
    user: root
    job: /usr/share/nginx/html/stats.py

- name: Setup cron for daily stats flag count
  cron:
    name: Daily flags counter
    hour: 4
    minute: 5
    user: root
    job: /usr/share/nginx/html/get_flags.py

- name: Setup cron for weekly db backup
  cron:
    name: Database backup to s3
    special_time: weekly
    user: root
    job: /usr/share/nginx/html/db_backup.sh > /dev/null 2>&1
  
- name: setup certbot renewals
  cron:
    name: certbot letsencrypt renewals.
    hour: 0
    minute: 0
    user: root
    job: python -c 'import random; import time; time.sleep(random.random() * 3600)' && certbot renew
  
- name: Copy over supervisor conf
  copy:
    src: supervisord/ilmnuri.ini
    dest: /etc/supervisord.d/ilmnuri.ini
    mode: 0744
  notify:
  - restart supervisor

- name: Make sure services are up and enabled.
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - firewalld
    - memcached
    - supervisord
    - nginx 

- name: Enabled http/ssh port 
  shell: firewall-cmd --permanent --zone=public --add-service={{ item }}
  with_items:
    - http
    - https
    - ssh 
  notify:
    - reload firewalld
